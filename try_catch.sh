set -e -o pipefail
shopt -s expand_aliases
throw() { return "${1:-1}"; }
trystderr() { printf %s "$TRY_INTERNAL_STDERR" | base64 -d >&2; }
alias try='TRY_INTERNAL_F() { '
alias catch=' }; [[ $- = *e* ]]; TRY_INTERNAL_E="$?"; set +e; exec {TRY_INTERNAL_STDOUT_FD}>&1; TRY_INTERNAL_=$(set -e -o pipefail; TRY_INTERNAL_F >&${TRY_INTERNAL_STDOUT_FD}-); ERR="$?"; exec {TRY_INTERNAL_STDOUT_FD}<&-; if [[ "$TRY_INTERNAL_E" == 0 ]]; then set -e; fi; if [[ "$ERR" != 0 ]]; then '
alias catchvars=' }; [[ $- = *e* ]]; TRY_INTERNAL_E="$?"; set +e; exec {TRY_INTERNAL_STDOUT_FD}>&1; TRY_INTERNAL_VARS="$(set -e -o pipefail; TRY_INTERNAL_TRAP() { declare -p "" $(compgen -v | grep -v "^FUNCNAME\$\\|^GROUPS\$\\|^ERR\$\\|^TRY_INTERNAL_" | while IFS= read -r TRY_INTERNAL_VAR; do if unset "$TRY_INTERNAL_VAR" 2>/dev/null; then printf "%s\\n" "$TRY_INTERNAL_VAR"; fi; done) 2>/dev/null || true; }; trap TRY_INTERNAL_TRAP EXIT; TRY_INTERNAL_F >&${TRY_INTERNAL_STDOUT_FD}-)"; ERR="$?"; exec {TRY_INTERNAL_STDOUT_FD}<&-; eval "$TRY_INTERNAL_VARS"; unset TRY_INTERNAL_VARS; if [[ "$TRY_INTERNAL_E" == 0 ]]; then set -e; fi; if [[ "$ERR" != 0 ]]; then '
alias catcherr=' }; [[ $- = *e* ]]; TRY_INTERNAL_E="$?"; set +e; unset TRY_INTERNAL_STDERR; exec {TRY_INTERNAL_STDOUT_FD}>&1; TRY_INTERNAL_VARS="$(TRY_INTERNAL_TRAP() { declare -p "" $(compgen -v | grep -v "^FUNCNAME\$\\|^GROUPS\$\\|^ERR\$\\|^TRY_INTERNAL_" | while IFS= read -r TRY_INTERNAL_VAR; do if unset "$TRY_INTERNAL_VAR" 2>/dev/null; then printf "%s\\n" "$TRY_INTERNAL_VAR"; fi; done) >&${TRY_INTERNAL_VARS_FD}- 2>/dev/null || true; }; exec {TRY_INTERNAL_VARS_FD}>&1; (TRY_INTERNAL_=$(set -e -o pipefail; trap TRY_INTERNAL_TRAP EXIT; TRY_INTERNAL_F >&${TRY_INTERNAL_STDOUT_FD}-)) 2>&1 | printf "%s\\n" "declare -- TRY_INTERNAL_STDERR=$(base64 -w 0)")"; ERR="$?"; exec {TRY_INTERNAL_STDOUT_FD}<&-; eval "$TRY_INTERNAL_VARS"; unset TRY_INTERNAL_VARS; if [[ "$TRY_INTERNAL_E" == 0 ]]; then set -e; fi; if [[ "$ERR" = 0 ]]; then trystderr; fi; if [[ "$ERR" != 0 ]]; then '
